{"ast":null,"code":"var _jsxFileName = \"D:\\\\FrontEnd\\\\snake-game\\\\src\\\\components\\\\GameBoard\\\\GameBoard.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { Snake } from \"../../utils/Snake\";\nimport { StyledBordCell, StyledGameBord, StyledSnakeCell } from \"./GameBoard.styled\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst direction = function () {\n  let key = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  switch (key.toString().toLowerCase()) {\n    case \"w\":\n      return \"up\";\n    case \"s\":\n      return \"down\";\n    case \"d\":\n      return \"left\";\n    case \"a\" || \"ArrowRight\":\n      return \"right\";\n  }\n};\nconst createBoard = BOARD_SIZE => {\n  let count = 1;\n  const board = [];\n  for (let row = 0; row < BOARD_SIZE; row++) {\n    const currentRow = [];\n    for (let colum = 0; colum < BOARD_SIZE; colum++) {\n      currentRow.push(\"+\");\n    }\n    board.push(currentRow);\n  }\n  return board;\n};\nexport const GameBoard = () => {\n  _s();\n  const [board, setBoard] = useState(createBoard(10));\n  const [snake, setSnake] = useState(new Snake(0, 0));\n  useEffect(() => {}, [snake.head.val]);\n  useEffect(() => {\n    document.body.style.overflow = \"hidden\";\n    window.addEventListener(\"keydown\", handleMove);\n    return () => {\n      window.removeEventListener(\"keydown\", handleMove);\n      document.body.style.overflow = \"auto\";\n    };\n  }, []);\n  const handleMove = e => {\n    console.log(e.key);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        const {\n          x,\n          y\n        } = snake.move(\"UP\");\n        const newSnake = new Snake(x, y);\n        setSnake(newSnake);\n      },\n      children: \"Move\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledGameBord, {\n      onKeyDown: handleMove,\n      children: board.map((row, columnIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: row.map((cellValue, rowIndex) => {\n          if (snake.head.val.x === columnIndex && snake.head.val.y === rowIndex) {\n            return /*#__PURE__*/_jsxDEV(StyledSnakeCell, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 24\n            }, this);\n          }\n          return /*#__PURE__*/_jsxDEV(StyledBordCell, {\n            children: [columnIndex, \" \", rowIndex]\n          }, rowIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this);\n        })\n      }, columnIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(GameBoard, \"zOObT53btsILsHTgcVMarOQQE/M=\");\n_c = GameBoard;\nvar _c;\n$RefreshReg$(_c, \"GameBoard\");","map":{"version":3,"names":["useEffect","useState","Snake","StyledBordCell","StyledGameBord","StyledSnakeCell","direction","key","toString","toLowerCase","createBoard","BOARD_SIZE","count","board","row","currentRow","colum","push","GameBoard","setBoard","snake","setSnake","head","val","document","body","style","overflow","window","addEventListener","handleMove","removeEventListener","e","console","log","x","y","move","newSnake","map","columnIndex","cellValue","rowIndex"],"sources":["D:/FrontEnd/snake-game/src/components/GameBoard/GameBoard.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { Snake } from \"../../utils/Snake\";\r\nimport {\r\n  StyledBordCell,\r\n  StyledGameBord,\r\n  StyledSnakeCell,\r\n} from \"./GameBoard.styled\";\r\n\r\nconst direction = (key = \"\") => {\r\n  switch (key.toString().toLowerCase()) {\r\n    case \"w\":\r\n      return \"up\";\r\n    case \"s\":\r\n      return \"down\";\r\n    case \"d\":\r\n      return \"left\";\r\n    case \"a\" || \"ArrowRight\":\r\n      return \"right\";\r\n  }\r\n};\r\n\r\nconst createBoard = (BOARD_SIZE) => {\r\n  let count = 1;\r\n  const board = [];\r\n  for (let row = 0; row < BOARD_SIZE; row++) {\r\n    const currentRow = [];\r\n    for (let colum = 0; colum < BOARD_SIZE; colum++) {\r\n      currentRow.push(\"+\");\r\n    }\r\n    board.push(currentRow);\r\n  }\r\n  return board;\r\n};\r\n\r\nexport const GameBoard = () => {\r\n  const [board, setBoard] = useState(createBoard(10));\r\n  const [snake, setSnake] = useState(new Snake(0, 0));\r\n  useEffect(() => {}, [snake.head.val]);\r\n  useEffect(() => {\r\n    document.body.style.overflow = \"hidden\";\r\n    window.addEventListener(\"keydown\", handleMove);\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", handleMove);\r\n      document.body.style.overflow = \"auto\";\r\n    };\r\n  }, []);\r\n\r\n  const handleMove = (e) => {\r\n    console.log(e.key);\r\n  };\r\n  return (\r\n    <>\r\n      <button\r\n        onClick={() => {\r\n          const { x, y } = snake.move(\"UP\");\r\n          const newSnake = new Snake(x, y);\r\n          setSnake(newSnake);\r\n        }}\r\n      >\r\n        Move\r\n      </button>\r\n      <StyledGameBord onKeyDown={handleMove}>\r\n        {board.map((row, columnIndex) => (\r\n          <div key={columnIndex}>\r\n            {row.map((cellValue, rowIndex) => {\r\n              if (\r\n                snake.head.val.x === columnIndex &&\r\n                snake.head.val.y === rowIndex\r\n              ) {\r\n                return <StyledSnakeCell></StyledSnakeCell>;\r\n              }\r\n              return (\r\n                <StyledBordCell key={rowIndex}>\r\n                  {columnIndex} {rowIndex}\r\n                </StyledBordCell>\r\n              );\r\n            })}\r\n          </div>\r\n        ))}\r\n      </StyledGameBord>\r\n    </>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}