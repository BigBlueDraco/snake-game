{"ast":null,"code":"var _jsxFileName = \"D:\\\\FrontEnd\\\\snake-game\\\\src\\\\components\\\\GameBoard\\\\GameBoard.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { createFood } from \"../../utils/Food\";\nimport { growSnake, moveSnake, Snake, snakeEatItSeff, snakeISOoutOfBounce } from \"../../utils/Snake\";\nimport { ScoreBar } from \"../ScoreBar/ScoreBar\";\nimport { StyledBordCell, StyledGameBord, StyledSnakeCell } from \"./GameBoard.styled\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BOARD_SIZE = 3;\nconst directionFromKey = function () {\n  let key = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  switch (key.toString().toLowerCase()) {\n    case \"w\":\n      return \"up\";\n    case \"arrowup\":\n      return \"up\";\n    case \"s\":\n      return \"down\";\n    case \"arrowdown\":\n      return \"down\";\n    case \"d\":\n      return \"right\";\n    case \"arrowright\":\n      return \"right\";\n    case \"a\":\n      return \"left\";\n    case \"arrowleft\":\n      return \"left\";\n    default:\n      return \"\";\n  }\n};\nconst createBoard = BOARD_SIZE => {\n  let count = 1;\n  const board = [];\n  for (let row = 0; row < BOARD_SIZE; row++) {\n    const currentRow = [];\n    for (let colum = 0; colum < BOARD_SIZE; colum++) {\n      currentRow.push(\"+\");\n    }\n    board.push(currentRow);\n  }\n  return board;\n};\nexport const GameBoard = () => {\n  _s();\n  const START_SNAKE = [{\n    cord: {\n      x: 0,\n      y: 0\n    },\n    dir: \"down\"\n  }, {\n    cord: {\n      x: 0,\n      y: 1\n    },\n    dir: \"down\"\n  }];\n  const [board, setBoard] = useState(createBoard(BOARD_SIZE));\n  const [snake, setSnake] = useState([...START_SNAKE]);\n  console.log([...START_SNAKE]);\n  const [food, setFood] = useState(createFood(BOARD_SIZE));\n  const [score, setScore] = useState(0);\n  useEffect(() => {\n    document.body.style.overflow = \"hidden\";\n    window.addEventListener(\"keydown\", handleMove);\n    return () => {\n      window.removeEventListener(\"keydown\", handleMove);\n      document.body.style.overflow = \"auto\";\n    };\n  });\n  const spawnFood = () => {\n    const newFood = createFood(BOARD_SIZE);\n    if (snake.some(_ref => {\n      let {\n        cord: {\n          x,\n          y\n        }\n      } = _ref;\n      return x === newFood.x && y === newFood.y;\n    })) {\n      spawnFood();\n    }\n    return newFood;\n  };\n  useEffect(() => {\n    if (snakeEatItSeff(snake) || snakeISOoutOfBounce(snake, BOARD_SIZE)) {\n      setSnake([...START_SNAKE]);\n      setScore(0);\n      return;\n    }\n    if (snake[snake.length - 1].cord.x === food.x && snake[snake.length - 1].cord.y === food.y) {\n      setSnake(prevSnake => growSnake(prevSnake));\n      setScore(prev => prev + food.cost);\n      // setFood(createFood(BOARD_SIZE));\n      setFood(spawnFood());\n    }\n  }, [snake]);\n  const cellType = (columnIndex, rowIndex) => {\n    if (snake.some(elem => elem.cord.x === columnIndex && elem.cord.y === rowIndex)) return \"snake\";\n    if (food.x === columnIndex && food.y === rowIndex) return \"food\";\n  };\n  const handleMove = e => {\n    const direction = directionFromKey(e.key);\n    setSnake(prevSnake => moveSnake(prevSnake, direction));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ScoreBar, {\n      children: score\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledGameBord, {\n      onKeyDown: handleMove,\n      children: board.map((row, columnIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: row.map((cellValue, rowIndex) => /*#__PURE__*/_jsxDEV(StyledBordCell, {\n          type: cellType(columnIndex, rowIndex),\n          children: [columnIndex, \" \", rowIndex]\n        }, rowIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 15\n        }, this))\n      }, columnIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(GameBoard, \"FmeeKWONm+zlQRI15b2IlCq+0BE=\");\n_c = GameBoard;\nvar _c;\n$RefreshReg$(_c, \"GameBoard\");","map":{"version":3,"names":["useEffect","useState","createFood","growSnake","moveSnake","Snake","snakeEatItSeff","snakeISOoutOfBounce","ScoreBar","StyledBordCell","StyledGameBord","StyledSnakeCell","BOARD_SIZE","directionFromKey","key","toString","toLowerCase","createBoard","count","board","row","currentRow","colum","push","GameBoard","START_SNAKE","cord","x","y","dir","setBoard","snake","setSnake","console","log","food","setFood","score","setScore","document","body","style","overflow","window","addEventListener","handleMove","removeEventListener","spawnFood","newFood","some","length","prevSnake","prev","cost","cellType","columnIndex","rowIndex","elem","e","direction","map","cellValue"],"sources":["D:/FrontEnd/snake-game/src/components/GameBoard/GameBoard.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { createFood } from \"../../utils/Food\";\r\nimport {\r\n  growSnake,\r\n  moveSnake,\r\n  Snake,\r\n  snakeEatItSeff,\r\n  snakeISOoutOfBounce,\r\n} from \"../../utils/Snake\";\r\nimport { ScoreBar } from \"../ScoreBar/ScoreBar\";\r\nimport {\r\n  StyledBordCell,\r\n  StyledGameBord,\r\n  StyledSnakeCell,\r\n} from \"./GameBoard.styled\";\r\n\r\nconst BOARD_SIZE = 3;\r\nconst directionFromKey = (key = \"\") => {\r\n  switch (key.toString().toLowerCase()) {\r\n    case \"w\":\r\n      return \"up\";\r\n    case \"arrowup\":\r\n      return \"up\";\r\n\r\n    case \"s\":\r\n      return \"down\";\r\n    case \"arrowdown\":\r\n      return \"down\";\r\n\r\n    case \"d\":\r\n      return \"right\";\r\n    case \"arrowright\":\r\n      return \"right\";\r\n\r\n    case \"a\":\r\n      return \"left\";\r\n    case \"arrowleft\":\r\n      return \"left\";\r\n    default:\r\n      return \"\";\r\n  }\r\n};\r\n\r\nconst createBoard = (BOARD_SIZE) => {\r\n  let count = 1;\r\n  const board = [];\r\n  for (let row = 0; row < BOARD_SIZE; row++) {\r\n    const currentRow = [];\r\n    for (let colum = 0; colum < BOARD_SIZE; colum++) {\r\n      currentRow.push(\"+\");\r\n    }\r\n    board.push(currentRow);\r\n  }\r\n  return board;\r\n};\r\n\r\nexport const GameBoard = () => {\r\n  const START_SNAKE = [\r\n    { cord: { x: 0, y: 0 }, dir: \"down\" },\r\n    { cord: { x: 0, y: 1 }, dir: \"down\" },\r\n  ];\r\n  const [board, setBoard] = useState(createBoard(BOARD_SIZE));\r\n  const [snake, setSnake] = useState([...START_SNAKE]);\r\n  console.log([...START_SNAKE]);\r\n  const [food, setFood] = useState(createFood(BOARD_SIZE));\r\n  const [score, setScore] = useState(0);\r\n  useEffect(() => {\r\n    document.body.style.overflow = \"hidden\";\r\n    window.addEventListener(\"keydown\", handleMove);\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", handleMove);\r\n      document.body.style.overflow = \"auto\";\r\n    };\r\n  });\r\n  const spawnFood = () => {\r\n    const newFood = createFood(BOARD_SIZE);\r\n    if (\r\n      snake.some(({ cord: { x, y } }) => x === newFood.x && y === newFood.y)\r\n    ) {\r\n      spawnFood();\r\n    }\r\n    return newFood;\r\n  };\r\n  useEffect(() => {\r\n    if (snakeEatItSeff(snake) || snakeISOoutOfBounce(snake, BOARD_SIZE)) {\r\n      setSnake([...START_SNAKE]);\r\n      setScore(0);\r\n      return;\r\n    }\r\n    if (\r\n      snake[snake.length - 1].cord.x === food.x &&\r\n      snake[snake.length - 1].cord.y === food.y\r\n    ) {\r\n      setSnake((prevSnake) => growSnake(prevSnake));\r\n      setScore((prev) => prev + food.cost);\r\n      // setFood(createFood(BOARD_SIZE));\r\n      setFood(spawnFood());\r\n    }\r\n  }, [snake]);\r\n\r\n  const cellType = (columnIndex, rowIndex) => {\r\n    if (\r\n      snake.some(\r\n        (elem) => elem.cord.x === columnIndex && elem.cord.y === rowIndex\r\n      )\r\n    )\r\n      return \"snake\";\r\n    if (food.x === columnIndex && food.y === rowIndex) return \"food\";\r\n  };\r\n\r\n  const handleMove = (e) => {\r\n    const direction = directionFromKey(e.key);\r\n    setSnake((prevSnake) => moveSnake(prevSnake, direction));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ScoreBar>{score}</ScoreBar>\r\n      <StyledGameBord onKeyDown={handleMove}>\r\n        {board.map((row, columnIndex) => (\r\n          <div key={columnIndex}>\r\n            {row.map((cellValue, rowIndex) => (\r\n              <StyledBordCell\r\n                type={cellType(columnIndex, rowIndex)}\r\n                key={rowIndex}\r\n              >\r\n                {columnIndex} {rowIndex}\r\n              </StyledBordCell>\r\n            ))}\r\n          </div>\r\n        ))}\r\n      </StyledGameBord>\r\n    </>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}