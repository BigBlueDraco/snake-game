{"ast":null,"code":"var _jsxFileName = \"D:\\\\FrontEnd\\\\snake-game\\\\src\\\\components\\\\GameBoard\\\\GameBoard.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { Snake } from \"../../utils/Snake\";\nimport { StyledBordCell, StyledGameBord, StyledSnakeCell } from \"./GameBoard.styled\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst createBoard = BOARD_SIZE => {\n  let count = 1;\n  const board = [];\n  for (let row = 0; row < BOARD_SIZE; row++) {\n    const currentRow = [];\n    for (let colum = 0; colum < BOARD_SIZE; colum++) {\n      currentRow.push(\"+\");\n    }\n    board.push(currentRow);\n  }\n  return board;\n};\nexport const GameBoard = () => {\n  _s();\n  const [board, setBoard] = useState(createBoard(10));\n  const [snake, setSnake] = useState(new Snake(0, 0));\n  useEffect(() => {}, [snake]);\n  moveLeft = () => {\n    console.log(this.head);\n    const {\n      x,\n      y\n    } = this.head.val;\n    const node = new SnakeNode({\n      x: x + 1,\n      y\n    });\n    this.head = node;\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        // setSnake(new Snake(snake.head.val.x + 1, snake.head.val.y));\n        snake.moveLeft();\n      },\n      children: \"Move\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledGameBord, {\n      children: board.map((row, columnIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: row.map((cellValue, rowIndex) => {\n          if (snake.head.val.x === columnIndex && snake.head.val.y === rowIndex) {\n            return /*#__PURE__*/_jsxDEV(StyledSnakeCell, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 24\n            }, this);\n          }\n          return /*#__PURE__*/_jsxDEV(StyledBordCell, {\n            children: [columnIndex, \" \", rowIndex]\n          }, rowIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this);\n        })\n      }, columnIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(GameBoard, \"AUj7TIsc94h+78/oGaaTI1mDy50=\");\n_c = GameBoard;\nvar _c;\n$RefreshReg$(_c, \"GameBoard\");","map":{"version":3,"names":["useEffect","useState","Snake","StyledBordCell","StyledGameBord","StyledSnakeCell","createBoard","BOARD_SIZE","count","board","row","currentRow","colum","push","GameBoard","setBoard","snake","setSnake","moveLeft","console","log","head","x","y","val","node","SnakeNode","map","columnIndex","cellValue","rowIndex"],"sources":["D:/FrontEnd/snake-game/src/components/GameBoard/GameBoard.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { Snake } from \"../../utils/Snake\";\r\nimport {\r\n  StyledBordCell,\r\n  StyledGameBord,\r\n  StyledSnakeCell,\r\n} from \"./GameBoard.styled\";\r\n\r\nconst createBoard = (BOARD_SIZE) => {\r\n  let count = 1;\r\n  const board = [];\r\n  for (let row = 0; row < BOARD_SIZE; row++) {\r\n    const currentRow = [];\r\n    for (let colum = 0; colum < BOARD_SIZE; colum++) {\r\n      currentRow.push(\"+\");\r\n    }\r\n    board.push(currentRow);\r\n  }\r\n  return board;\r\n};\r\n\r\nexport const GameBoard = () => {\r\n  const [board, setBoard] = useState(createBoard(10));\r\n  const [snake, setSnake] = useState(new Snake(0, 0));\r\n  useEffect(() => {}, [snake]);\r\n  moveLeft = () => {\r\n    console.log(this.head);\r\n    const { x, y } = this.head.val;\r\n    const node = new SnakeNode({ x: x + 1, y });\r\n    this.head = node;\r\n  };\r\n  return (\r\n    <>\r\n      <button\r\n        onClick={() => {\r\n          // setSnake(new Snake(snake.head.val.x + 1, snake.head.val.y));\r\n          snake.moveLeft();\r\n        }}\r\n      >\r\n        Move\r\n      </button>\r\n      <StyledGameBord>\r\n        {board.map((row, columnIndex) => (\r\n          <div key={columnIndex}>\r\n            {row.map((cellValue, rowIndex) => {\r\n              if (\r\n                snake.head.val.x === columnIndex &&\r\n                snake.head.val.y === rowIndex\r\n              ) {\r\n                return <StyledSnakeCell></StyledSnakeCell>;\r\n              }\r\n              return (\r\n                <StyledBordCell key={rowIndex}>\r\n                  {columnIndex} {rowIndex}\r\n                </StyledBordCell>\r\n              );\r\n            })}\r\n          </div>\r\n        ))}\r\n      </StyledGameBord>\r\n    </>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,KAAK,QAAQ,mBAAmB;AACzC,SACEC,cAAc,EACdC,cAAc,EACdC,eAAe,QACV,oBAAoB;AAAC;AAAA;AAE5B,MAAMC,WAAW,GAAIC,UAAU,IAAK;EAClC,IAAIC,KAAK,GAAG,CAAC;EACb,MAAMC,KAAK,GAAG,EAAE;EAChB,KAAK,IAAIC,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGH,UAAU,EAAEG,GAAG,EAAE,EAAE;IACzC,MAAMC,UAAU,GAAG,EAAE;IACrB,KAAK,IAAIC,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGL,UAAU,EAAEK,KAAK,EAAE,EAAE;MAC/CD,UAAU,CAACE,IAAI,CAAC,GAAG,CAAC;IACtB;IACAJ,KAAK,CAACI,IAAI,CAACF,UAAU,CAAC;EACxB;EACA,OAAOF,KAAK;AACd,CAAC;AAED,OAAO,MAAMK,SAAS,GAAG,MAAM;EAAA;EAC7B,MAAM,CAACL,KAAK,EAAEM,QAAQ,CAAC,GAAGd,QAAQ,CAACK,WAAW,CAAC,EAAE,CAAC,CAAC;EACnD,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,IAAIC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EACnDF,SAAS,CAAC,MAAM,CAAC,CAAC,EAAE,CAACgB,KAAK,CAAC,CAAC;EAC5BE,QAAQ,GAAG,MAAM;IACfC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,IAAI,CAAC;IACtB,MAAM;MAAEC,CAAC;MAAEC;IAAE,CAAC,GAAG,IAAI,CAACF,IAAI,CAACG,GAAG;IAC9B,MAAMC,IAAI,GAAG,IAAIC,SAAS,CAAC;MAAEJ,CAAC,EAAEA,CAAC,GAAG,CAAC;MAAEC;IAAE,CAAC,CAAC;IAC3C,IAAI,CAACF,IAAI,GAAGI,IAAI;EAClB,CAAC;EACD,oBACE;IAAA,wBACE;MACE,OAAO,EAAE,MAAM;QACb;QACAT,KAAK,CAACE,QAAQ,EAAE;MAClB,CAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAGK,eACT,QAAC,cAAc;MAAA,UACZT,KAAK,CAACkB,GAAG,CAAC,CAACjB,GAAG,EAAEkB,WAAW,kBAC1B;QAAA,UACGlB,GAAG,CAACiB,GAAG,CAAC,CAACE,SAAS,EAAEC,QAAQ,KAAK;UAChC,IACEd,KAAK,CAACK,IAAI,CAACG,GAAG,CAACF,CAAC,KAAKM,WAAW,IAChCZ,KAAK,CAACK,IAAI,CAACG,GAAG,CAACD,CAAC,KAAKO,QAAQ,EAC7B;YACA,oBAAO,QAAC,eAAe;cAAA;cAAA;cAAA;YAAA,QAAmB;UAC5C;UACA,oBACE,QAAC,cAAc;YAAA,WACZF,WAAW,OAAGE,QAAQ;UAAA,GADJA,QAAQ;YAAA;YAAA;YAAA;UAAA,QAEZ;QAErB,CAAC;MAAC,GAbMF,WAAW;QAAA;QAAA;QAAA;MAAA,QAetB;IAAC;MAAA;MAAA;MAAA;IAAA,QACa;EAAA,gBAChB;AAEP,CAAC;AAAC,GAzCWd,SAAS;AAAA,KAATA,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}